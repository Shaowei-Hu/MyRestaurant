entity Restaurant {
	name String,
    content String,
    creationDate DateTime
}

entity Stage {
	name String,
    status String,
    clientAmount Integer,
	amount BigDecimal,
    amountPaid BigDecimal,
    creationDate DateTime
}

entity Desk {
	name String,
    status String,
    clientCapability Integer,
    ranking Integer
}

entity Ordre {
	name String,
    status String,
    price BigDecimal,
    creationDate DateTime
}

entity Payment {
	type PaymentType,
    amount BigDecimal,
    creationDate DateTime
}

entity Product {
	code String,
	name String,
    price BigDecimal,
    taxType String,
    description String,
    ranking Integer
}

entity Category {
    name String,
    ranking Integer
}

entity Accounting {
	name String,
	type AccountingType,
	paymentType PaymentType,
	info String,
	date DateTime,
	amount BigDecimal,
	creationDate ZonedDateTime
}

entity PaymentType{
	type String
}

enum AccountingType {
    HALF, DIARY, WEEKLY, MONTHLY, TRIMESTER, SEMESTER, YEARLY
}

entity Client {
    name String,
    ordreJson String
}

entity GlobalConfig {
    tax1 BigDecimal,
    tax2 BigDecimal
}

entity Config {

}

relationship OneToMany {
	Restaurant{desk} to Desk,
	Restaurant{category} to Category,
	Restaurant{accounting} to Accounting,
    Desk{stage} to Stage{desk},
    Stage{ordre} to Ordre{stage},
    Stage{client} to Client,
    Client{payment} to Payment,
    Category{product} to Product
}



// Set pagination options
paginate Desk with infinite-scroll
paginate Payment, Ordre, Stage with pagination

// Set service options to all except few
service all with serviceImpl
// Set an angular suffix
